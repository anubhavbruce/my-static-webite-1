image: node:latest

stages:
    - build
    - test
    - deploy review
    - deploy staging
    - deploy production
    - production tests
    
cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - node_modules/
        
variables:
    STAGING_DOMAIN: instazone-staging.surge.sh
    PRODUCTION_DOMAIN: instazone.surge.sh
        
build website:
    stage: build
    only:
        - master
        - merge_requests
        - udemy
    script:
        - echo $CI_COMMIT_SHORT_SHA
        - npm install
        - npm install -g gatsby-cli
        - gatsby build
        - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
    artifacts:
        paths:
            - ./public
            
test artifact:
    image: alpine
    stage: test
    script:
        - grep -q "Gatsby" ./public/index.htm
        
test website:
    stage: test
    script:
        - npm install
        - npm install -g gatsby-cli
        - gatsby serve &
        - sleep 3
        - curl "hhtp://localhost:9000" | tac | tac | grep -q "Gatsby"

deploy review:
    stage: deploy review
    only:
        - merge_requests
        - udemy
    environment:
        name: review/$CI_COMMIT_REF_NAME
        url: https://instazone-$CI_ENVIRONMENT_SLUG.surge.sh
        on_stop: stop review
    script:
        - npm install --global surge
        - surge --project ./public --domain instazone-$CI_ENVIRONMENT_SLUG.surge.sh

stop review:
    stage: deploy review
    variables:
        GIT_STRATEGY: none #If set to none, it won't clone the repository
    script:
        - npm install --global surge
        - surge teardown instazone-$CI_ENVIRONMENT_SLUG.surge.sh
    when: manual
    environment:
        name: review/$CI_COMMIT_REF_NAME
        action: stop

deploy staging:
    stage: deploy staging
    environment: 
        name: staging
        url: http://$STAGING_DOMAIN
    only:
        - master
        - udemy
    script:
        - npm install --global surge
        - surge --project ./public --domain $STAGING_DOMAIN
        
deploy production:
    stage: deploy production
    environment: 
        name: production
        url: http://$PRODUCTION_DOMAIN
    #when: manual
    #allow_failure: false
    only:
        - master
    script:
        - npm install --global surge
        - surge --project ./public --domain $PRODUCTION_DOMAIN   
        
production tests:
    image: alpine
    stage: production tests
    only:
        - master
    script:
        - apk add --no-cache curl
        - curl -s "https://instazone.surge.sh" | grep -q "Hi people"
        - curl -s "https://instazone.surge.sh" | grep -q "$CI_COMMIT_SHORT_SHA"
        
