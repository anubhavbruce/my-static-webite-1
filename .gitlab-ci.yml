image: node

stages:
  - cache
  - build
  - test
  - deploy review
  - deploy staging
  - deploy production
  - production tests

cache:
  key: ${CI_COMMIT_SHORT_SHA}
  paths: 
     - node_modules/
  policy: pull


variables:
  STAGING_DOMAIN: innate-heart-staging.surge.sh
  PRODUCTION_DOMAIN: innate-heart.surge.sh

build website:
  stage: build
  script:
      - echo $CI_COMMIT_SHORT_SHA
      - npm install
      - npm install -g gatsby-cli
      - gatsby build
      - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
  artifacts:
    paths:
      - ./public

test artifact:
  image: alpine
  stage: test
  script:
        - grep "Gatsby" ./public/index.html

test website:
  stage: test
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve &
    - sleep 3
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"
 

deploy review:
  stage: deploy review
  only:
    - merge requests
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://innate-heart-$CI_ENVIRONMENT_SLUG.surge.sh
    on_stop: stop review
  script:
    - npm install --global surge
    - surge --project ./public --domain innate-heart-$CI_ENVIRONMENT_SLUG.surge.sh

stop review:
  stage: deploy review
  only:
    - merge_requests
  variables:
    GIT_STRATEGY: none
  script:
    - npm install --global surge
    - surge teardown innate-heart-$CI_ENVIRONMENT_SLUG.surge.sh
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop

    
    
deploy staging:
  stage: deploy staging
  environment:
    name: staging
    url: http://$STAGING_DOMAIN
  only:
    - master
  script:
    - npm install --global surge
    - surge --project ./public --domain $STAGING_DOMAIN
 
    
deploy production:
  stage: deploy production
  environment:
    name: production
    url: http://$PRODUCTION_DOMAIN
  only:
    - master
  when: manual
  allow_failure: false
  before_script: 
    - echo "deploying to production"
    - npm install --global surge
  script:
    - surge --project ./public --domain $PRODUCTION_DOMAIN
  
    
Production tests:
  image: alpine
  stage: production tests
  only:
    - master
  script:
    - apk add curl
    - apk add curl-doc
    - curl "$PRODUCTION_DOMAIN" | grep -q "$CI_COMMIT_SHORT_SHA"
 
