image: node

stages:
  - cache
  - build
  - build_test
  - deploy_staging
  - deploy_production
  - post_production_test
  - teardown

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ./node_modules/
  policy: pull

update cache:
  stage: cache
  only:
    - schedule
  script:
    - npm install
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - ./node_modules/
    policy: push

variables:
  STG_DOMAIN: save_trees_staging.surge.sh
  PRD_DOMAIN: save_trees.surge.sh

build website:
  stage: build
  script:
    - npm install -g gatsby-cli
    - gatsby build
    - echo $CI_COMMIT_SHORT_SHA
    - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
  artifacts:
    paths:
      - ./public

test artifact:
  image: alpine
  cache: {}
  stage: build_test
  script:
    - grep -q "$CI_COMMIT_SHORT_SHA" ./public/index.html
    - echo $?

test website:
  stage: build_test
  script:
    - npm install -g gatsby-cli
    - gatsby serve &
    - sleep 5
    - curl "http://localhost:9000" | grep -q "save trees"

deploy staging: 
  stage: deploy_staging
  only:
    - master
  environment:
    name: staging
    url: http://$STG_DOMAIN 
  script:
    - npm install -g surge
    - surge --project ./public --domain $STG_DOMAIN

deploy production: 
  stage: deploy_production
  only:
    - master
  environment:
    name: production
    url: http://$PRD_DOMAIN
  script:
    - npm install -g surge
    - surge --project ./public --domain $PRD_DOMAIN

Post production tests:
  image: alpine
  stage: post_production_test
  cache: {}
  only:
    - master  
  script:
    - apk add curl
    - curl $PRD_DOMAIN | grep -q "save trees"
    - echo $?
    - curl $PRD_DOMAIN | grep -q "$CI_COMMIT_SHORT_SHA"
    - echo $?

website teardown:
  stage: teardown
  only:
    - master
  when: manual
  script:
    - npm install -g surge
    - surge teardown $STG_DOMAIN
    - surge teardown $PRD_DOMAIN